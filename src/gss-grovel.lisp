(in-package :cl-gss)

(include "gssapi/gssapi.h")

(constant (gss-c-gss-code "GSS_C_GSS_CODE"))
(constant (gss-c-no-name "GSS_C_NO_NAME"))
(constant (gss-c-no-buffer "GSS_C_NO_BUFFER"))
(constant (gss-c-no-oid "GSS_C_NO_OID"))
(constant (gss-c-no-oid-set "GSS_C_NO_OID_SET"))
(constant (gss-c-no-context "GSS_C_NO_CONTEXT"))
(constant (gss-c-no-credential "GSS_C_NO_CREDENTIAL"))
(constant (gss-c-no-channel-bindings "GSS_C_NO_CHANNEL_BINDINGS"))

(constant (gss-c-calling-error-offset "GSS_C_CALLING_ERROR_OFFSET"))
(constant (gss-c-routine-error-offset "GSS_C_ROUTINE_ERROR_OFFSET"))
(constant (gss-c-supplementary-offset "GSS_C_SUPPLEMENTARY_OFFSET"))
(constant (gss-c-calling-error-mask "GSS_C_CALLING_ERROR_MASK"))
(constant (gss-c-routine-error-mask "GSS_C_ROUTINE_ERROR_MASK"))
(constant (gss-c-supplementary-mask "GSS_C_SUPPLEMENTARY_MASK"))

(constant (gss-s-call-inaccessible-read "GSS_S_CALL_INACCESSIBLE_READ"))
(constant (gss-s-call-inaccessible-write "GSS_S_CALL_INACCESSIBLE_WRITE"))
(constant (gss-s-call-bad-structure "GSS_S_CALL_BAD_STRUCTURE"))

(constant (gss-s-bad-mech "GSS_S_BAD_MECH"))
(constant (gss-s-bad-name "GSS_S_BAD_NAME"))
(constant (gss-s-bad-nametype "GSS_S_BAD_NAMETYPE"))
(constant (gss-s-bad-bindings "GSS_S_BAD_BINDINGS"))
(constant (gss-s-bad-status "GSS_S_BAD_STATUS"))
(constant (gss-s-bad-sig "GSS_S_BAD_SIG"))
(constant (gss-s-no-cred "GSS_S_NO_CRED"))
(constant (gss-s-no-context "GSS_S_NO_CONTEXT"))
(constant (gss-s-defective-token "GSS_S_DEFECTIVE_TOKEN"))
(constant (gss-s-defective-credential "GSS_S_DEFECTIVE_CREDENTIAL"))
(constant (gss-s-credentials-expired "GSS_S_CREDENTIALS_EXPIRED"))
(constant (gss-s-context-expired "GSS_S_CONTEXT_EXPIRED"))
(constant (gss-s-failure "GSS_S_FAILURE"))
(constant (gss-s-bad-qop "GSS_S_BAD_QOP"))
(constant (gss-s-unauthorized "GSS_S_UNAUTHORIZED"))
(constant (gss-s-unavailable "GSS_S_UNAVAILABLE"))
(constant (gss-s-duplicate-element "GSS_S_DUPLICATE_ELEMENT"))
(constant (gss-s-name-not-mn "GSS_S_NAME_NOT_MN"))

(constant (gss-s-continue-needed "GSS_S_CONTINUE_NEEDED"))
(constant (gss-s-duplicate-token "GSS_S_DUPLICATE_TOKEN"))
(constant (gss-s-old-token "GSS_S_OLD_TOKEN"))
(constant (gss-s-unseq-token "GSS_S_UNSEQ_TOKEN"))
(constant (gss-s-gap-token "GSS_S_GAP_TOKEN"))

(ctype om-uint32 "OM_uint32")

(cstruct gss-buffer-desc "gss_buffer_desc" (length "length" :type om-uint32) (value "value" :type :pointer))
(ctype gss-buffer-t "gss_buffer_t")

(ctype gss-name-t "gss_name_t")
(ctype gss-oid "gss_OID")
(ctype gss-cred-id-t "gss_cred_id_t")
(ctype gss-ctx-id-t "gss_ctx_id_t")
(ctype gss-channel-bindings-t "gss_channel_bindings_t")
